{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAYF,SAASC,cAAc,gBAIzC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,QAAQC,IAAI,CAAEN,WAAUO,SAAUN,IAClCO,YAAW,WACaC,KAAKC,SAAW,GAEpCP,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAZPN,EAAKgB,iBAAiB,UAgBtB,SAAsBC,GACpBA,EAAIC,iBACJf,EAAUgB,UAAW,EACrBT,QAAQC,IAAIM,EAAIG,cAAcC,UAG9B,IAFA,IAA6DC,EAAjBL,EAAIG,cAAzCC,SAAYE,EAAID,EAAJC,KAAMC,EAAMF,EAANE,OAAQC,EAAKH,EAALhB,MAC3BoB,EAAW,GACRC,EAAI,EAAGA,GAAKH,EAAOI,cAAeD,IAAK,CAC9C,IAAMf,EAAWa,EAAMG,eAAkBD,EAAE,GAAKJ,EAAKK,cACrDF,EAASG,KAAKzB,EAAcuB,EAAGf,GAC5BkB,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,EAAAlC,GAASmC,OAAOC,QAAQ,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,OACpEI,QAAMC,IAAI,uBAAwCwB,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAE3D8B,OAAM,SAAAL,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,EAAAlC,GAASmC,OAAOI,QAAQ,sBAAuCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,OACnEI,QAAMC,IAAI,sBAAqCwB,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,KAI7DC,QAAQ+B,IAAIZ,GACTa,SAAQ,WAAOpC,EAAUgB,UAAW,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst submitBtn = document.querySelector('.form button');\n\nform.addEventListener('submit', onFormSubmit)\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    console.log({ position, newDelay: delay });\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay});\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(evn) {\n  evn.preventDefault();\n  submitBtn.disabled = true;\n  console.log(evn.currentTarget.elements);\n  const {elements: { step, amount, delay }} = evn.currentTarget;\n  const promises = [];\n  for (let i = 1; i <= amount.valueAsNumber; i++) {\n    const newDelay = delay.valueAsNumber + ((i-1 )* step.valueAsNumber);\n    promises.push(createPromise(i, newDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      }));\n  }\n\n  Promise.all(promises)\n    .finally(() => {submitBtn.disabled = false});\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$submitBtn","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","console","log","newDelay","setTimeout","Math","random","addEventListener","evn","preventDefault","disabled","currentTarget","elements","_elements","step","amount","delay1","promises","i","valueAsNumber","push","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","all","finally"],"version":3,"file":"03-promises.172d0168.js.map"}